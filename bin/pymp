#!/usr/bin/env python -OO -u
# coding=utf-8
from mysql_proto.engine_play import EnginePlay

__doc__ = """
Python MySQL Proxy

Usage:
  pymp [-c <file>]
  pymp [--config=<file>]

Options:
 -c <file> --config=<file>    Path to config file [default: conf/pymp.conf]
"""

import configobj
import sys
import os
import socket
from docopt import docopt

from multiprocessing.reduction import reduce_handle
from multiprocessing import active_children

sys.path.append('.')
sys.path.append('../mysql_proto')

from mysql_proto.engine import Engine


def main():
    args = docopt(__doc__, version='pymp 0.0.1')

    # Initialize Config
    config = configobj.ConfigObj(os.path.abspath(args['--config']))

    # Start listening to port...
    serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    serversocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    serversocket.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)
    serversocket.bind((config['pymp']['ip'],
                       int(config['pymp']['port'])))
    serversocket.listen(int(
        config['pymp']['max_outstanding_connection_requests']))

    engines = []

    try:
        while True:
            (clientsocket, address) = serversocket.accept()
            engine = Engine(config, reduce_handle(clientsocket.fileno()))
            # engine = EnginePlay(config, reduce_handle(clientsocket.fileno()))
            engine.daemon = True
            engine.start()
            engines.append(engine)
            engines = filter(lambda w: w in engines, active_children())
    except KeyboardInterrupt:
        pass
    finally:
        serversocket.close()


if __name__ == "__main__":
    main()
